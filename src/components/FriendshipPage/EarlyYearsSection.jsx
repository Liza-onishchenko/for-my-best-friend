import React, { useEffect, useRef, useState } from "react";
import css from "../../css/FriendshipPage/EarlyYearsSection.module.css";
import broom1 from "../../assets/images/FriendshipPage/EarlyYearsSection/1.jpg";
import broom2 from "../../assets/images/FriendshipPage/EarlyYearsSection/2.jpg";
import broom3 from "../../assets/images/FriendshipPage/EarlyYearsSection/3.jpg";
import broom4 from "../../assets/images/FriendshipPage/EarlyYearsSection/4.jpg";
import broom5 from "../../assets/images/FriendshipPage/EarlyYearsSection/5.jpg";
import broom6 from "../../assets/images/FriendshipPage/EarlyYearsSection/6.jpg";
import Modal from "../layout/Modal.jsx";

function EarlyYearsSection() {
  const photos = [
    { src: broom4 },
    { src: broom1 },
    { src: broom2 },
    { src: broom3 },
    { src: broom5 },
    { src: broom6 },
  ];

  const loopedPhotos = [...photos, ...photos]; // ‚ú® –ü–æ–¥–≤–æ—î–Ω–∏–π –º–∞—Å–∏–≤ –¥–ª—è –±–µ–∑–∫—ñ–Ω–µ—á–Ω–æ—ó –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  const scrollRef = useRef(null);
  const [activeImage, setActiveImage] = useState(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const openModal = (photo) => {
    setActiveImage(photo);
    setIsModalOpen(true);
  };

  const closeModal = () => {
    setIsModalOpen(false);
    setActiveImage(null);
  };

  useEffect(() => {
    const scrollContainer = scrollRef.current;
    if (!scrollContainer) return;

    let speed = 0.5;
    let animationFrameId;

    const autoScroll = () => {
      scrollContainer.scrollLeft += speed;

      const halfway = scrollContainer.scrollWidth / 2;
      if (scrollContainer.scrollLeft >= halfway) {
        // –ë–µ–∑ –∞–Ω—ñ–º–∞—Ü—ñ—ó ‚Äî —â–æ–± –Ω–µ –±—É–ª–æ –≤–∏–¥–Ω–æ
        scrollContainer.scrollLeft -= halfway;
      }

      animationFrameId = requestAnimationFrame(autoScroll);
    };

    animationFrameId = requestAnimationFrame(autoScroll);

    return () => cancelAnimationFrame(animationFrameId);
  }, []);

  return (
    <section className={css.earlyYearsSection}>
      <h2 className={css.sectionTitle}>–ü–µ—Ä—à—ñ –∫—Ä–æ–∫–∏ —Ä–∞–∑–æ–º</h2>
      <div className={css.contentWrapper}>
        <div className={css.textContainer}>
          <p>
            –ü–∞–º'—è—Ç–∞—é —Ç–æ–π –≤–µ—Ä–µ—Å–Ω–µ–≤–∏–π —Ä–∞–Ω–æ–∫ —É 5-–º—É –∫–ª–∞—Å—ñ. –ù–æ–≤—ñ –æ–±–ª–∏—á—á—è,
            —Ö–≤–∏–ª—é–≤–∞–Ω–Ω—è... —ñ –¥—ñ–≤—á–∏–Ω–∫–∞, –ø—Ä–æ —è–∫—É —è –∑–Ω–∞–ª–∞ –ª–∏—à–µ –æ–¥–Ω–µ: –≤–æ–Ω–∞ ‚Äì —Å–µ—Å—Ç—Ä–∞
            –ù–∞—Å—Ç—ñ –¢—Ä–æ—Ñ—ñ–º–æ–≤–æ—ó...
          </p>
          <p>–ü–∞–º'—è—Ç–∞—î—à —Ç—ñ –ø–µ—Ä—à—ñ —à–∫—ñ–ª—å–Ω—ñ —Ñ–æ—Ç–æ?</p>
          <p>–ù–∞—à–∞ –ø–µ—Ä—à–∞ —Ñ–æ—Ç–æ—Å–µ—Å—ñ—è —É —à–∫–æ–ª—ñ, –≤ —Ç—é–ª—å–ø–∞–Ω–∞—Ö...üå∑</p>
        </div>

        <div className={css.galleryContainer}>
          <div className={css.galleryScroll} ref={scrollRef}>
            {loopedPhotos.map((photo, i) => (
              <div
                key={i}
                className={css.imageCard}
                onClick={() => openModal(photo)}
              >
                <img src={photo.src} alt={photo.caption} />
              </div>
            ))}
          </div>
        </div>
      </div>

      <Modal isOpen={isModalOpen} onClose={closeModal}>
        {activeImage && (
          <>
            <img src={activeImage.src} alt="–ü–æ–≤–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è" />
            <p>{activeImage.caption}</p>
          </>
        )}
      </Modal>
    </section>
  );
}

export default EarlyYearsSection;

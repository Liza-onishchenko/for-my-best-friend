import React, { useEffect, useRef, useState } from "react";
import { motion } from "framer-motion";
import css from "../../css/FriendshipPage/SchoolTrialsSection.module.css"; // –°—Ç–≤–æ—Ä—ñ—Ç—å —Ü–µ–π —Ñ–∞–π–ª –¥–ª—è —Å—Ç–∏–ª—ñ–≤
import broom1 from "../../assets/images/FriendshipPage/SchoolTrialsSection/1.jpg";
import broom2 from "../../assets/images/FriendshipPage/SchoolTrialsSection/2.jpg";
import broom3 from "../../assets/images/FriendshipPage/SchoolTrialsSection/3.jpg";
import broom4 from "../../assets/images/FriendshipPage/SchoolTrialsSection/4.jpg";
import broom5 from "../../assets/images/FriendshipPage/SchoolTrialsSection/5.jpg";
import broom6 from "../../assets/images/FriendshipPage/SchoolTrialsSection/6.jpg";
import Modal from "../layout/Modal.jsx";

const SchoolTrialsSection = () => {
  const sectionVariants = {
    initial: { opacity: 0, y: 50 },
    animate: {
      opacity: 1,
      y: 0,
      transition: { duration: 1, ease: "easeInOut", delayChildren: 0.3 },
    },
    viewport: { once: true },
  };

  const textVariants = {
    initial: { opacity: 0, y: 20 },
    animate: { opacity: 1, y: 0 },
  };

  const imageVariants = {
    initial: { opacity: 0, scale: 0.8 },
    animate: {
      opacity: 1,
      scale: 1,
      transition: { duration: 1.2, ease: "easeInOut" },
    },
    hover: { scale: 1.05, transition: { duration: 0.3 } },
  };

  const tapeIconVariants = {
    hover: { rotate: 90, scale: 1.1, transition: { duration: 0.3 } },
  };
  const photos = [
    { src: broom4 },
    { src: broom1 },
    { src: broom2 },
    { src: broom3 },
    { src: broom5 },
    { src: broom6 },
  ];
  const loopedPhotos = [...photos, ...photos];
  const [activeImage, setActiveImage] = useState(null);
  const [isModalOpen, setIsModalOpen] = useState(false); // –°—Ç–∞–Ω –¥–ª—è –≤–∏–¥–∏–º–æ—Å—Ç—ñ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
  const scrollRef = useRef(null);

  const openModal = (photo) => {
    setActiveImage(photo);
    setIsModalOpen(true);
  };

  const closeModal = () => {
    setIsModalOpen(false);
    setActiveImage(null);
  };

  const scrollManually = (direction) => {
    const container = scrollRef.current;
    if (container) {
      const amount = container.offsetWidth * 0.8;
      container.scrollLeft += direction * amount;
    }
  };

  useEffect(() => {
    const scrollContainer = scrollRef.current;
    if (!scrollContainer) return;

    let speed = 1;
    let rafId;

    const scroll = () => {
      scrollContainer.scrollLeft += speed;

      const scrollWidth = scrollContainer.scrollWidth / 2;

      // –Ø–∫—â–æ –¥—ñ–π—à–ª–∏ –¥–æ –∫—ñ–Ω—Ü—è –ø–µ—Ä—à–æ–≥–æ –±–ª–æ–∫—É (–¥–æ —Å–µ—Ä–µ–¥–∏–Ω–∏)
      if (scrollContainer.scrollLeft >= scrollWidth) {
        // –ú–∏—Ç—Ç—î–≤–æ –ø–µ—Ä–µ–º–æ—Ç—É—î–º–æ –Ω–∞–∑–∞–¥ –Ω–∞ –ø–æ—á–∞—Ç–æ–∫
        scrollContainer.scrollLeft -= scrollWidth;
      }

      rafId = requestAnimationFrame(scroll);
    };

    rafId = requestAnimationFrame(scroll);
    return () => cancelAnimationFrame(rafId);
  }, []);

  return (
    <section className={css.schoolTrialsSection}>
      <motion.h2
        className={css.sectionTitle}
        variants={textVariants}
        initial="initial"
        whileInView="animate"
      >
        –ù–∞—à 16-–π –∫–∞–±—ñ–Ω–µ—Ç, —à–∫—ñ–ª—å–Ω—ñ –ø–æ–¥—ñ—ó, –≤–∏–ø—É—Å–∫–Ω–∏–π
      </motion.h2>

      <motion.div
        className={css.contentWrapper}
        variants={sectionVariants}
        initial="initial"
        whileInView="animate"
      >
        <motion.div className={css.textBlock} variants={textVariants}>
          <p>
            1Ô∏è‚É£6Ô∏è‚É£ –í—ñ–Ω –±—É–≤ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–ª–∞—Å–æ–º ‚Äî —Ü–µ –±—É–ª–∞ –Ω–∞—à–∞ —Ñ–æ—Ä—Ç–µ—Ü—è.üè∞ –°–∞–º–µ —Ç—É—Ç –º–∏
            –ø–∏—Å–∞–ª–∏ –Ω–∞—à–µ –î–ü–ê –∑ –º–µ—Ç—Ä–æ–≤–∏–º–∏ —à–ø–∞—Ä–≥–∞–ª–∫–∞–º–∏.üìù
          </p>
          <p>
            –ê –ø–∞–º‚Äô—è—Ç–∞—î—à, —è–∫ —Ö–ª–æ–ø—Ü—ñ –∑–∞–ø—É—Å–∫–∞–ª–∏ –ø—ñ—Ç–∞—Ä–¥–∏ –ø—Ä—è–º–æ –≤ –∫–ª–∞—Å—ñ?üß® –Ü
            —Ñ–æ—Ç–æ—Å–µ—Å—ñ—ó –≤ ¬´–ø—Ä–∏—Å—Ç—Ä–æ–π—Ü—ñ¬ª ‚Äî –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ñ! –Ü, –∑–≤—ñ—Å–Ω–æ, —Ç—ñ –≤—ñ–¥–æ—Å–∏, —è–∫—ñ –º–∏
            –∑–Ω—ñ–º–∞–ª–∏‚Ä¶ –∫–æ–º–ø—Ä–æ–º–∞—Ç —Å—Ç—Ä–∞—à–Ω–æ—ó —Å–∏–ª–∏ üìπüòÑ –©–µ —á–µ—Ä–≥—É–≤–∞–Ω–Ω—è –≤ —ó–¥–∞–ª—å–Ω—ñ‚Ä¶ –Ω–µ
            –Ω–∞–π–≥—ñ—Ä—à–µ, –ø—Ä–∞–≤–¥–∞ –∂? –ù–∞—à–∞ –ª—é–±–∏–º–∞ –ù–∞—Ç–∞–ª—å—è –û–ª–µ–∫—Å—ñ—ó–≤–Ω–∞, —è–∫–∞ –∑–º—É—à—É–≤–∞–ª–∞
            –∑–Ω—ñ–º–∞—Ç–∏ –ª–∞–∫ —Ü–≤—è—Ö–æ–º –ø—Ä—è–º–æ –Ω–∞ —É—Ä–æ—Ü—ñ?üíÖ –ê –ø–æ—Ö–æ–¥–∏ –≤ —Ç—É–∞–ª–µ—Ç —É—Å—ñ–º –≥—É—Ä—Ç–æ–º?
            –°–∞–º–µ —Ç–∞–º, –¥–æ —Ä–µ—á—ñ, —è –¥—ñ–∑–Ω–∞–ª–∞—Å—è –ø—Ä–æ —Ç–æ–π —Å–∞–º–∏–π —Ç–≤—ñ–π —Å–µ–∫—Ä–µ—Ç‚Ä¶ —è–∫—â–æ —Ç–∏ —â–µ
            –ø–∞–º‚Äô—è—Ç–∞—î—à üòâ
          </p>
        </motion.div>
        <div className={css.galleryContainer}>
          <div className={css.galleryScroll} ref={scrollRef}>
            {loopedPhotos.map((photo, i) => (
              <div
                key={i}
                className={css.imageCard}
                onClick={() => openModal(photo)}
              >
                <img src={photo.src} alt={photo.caption} />
              </div>
            ))}
          </div>
        </div>

        {/* –†–µ–Ω–¥–µ—Ä–∏–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Modal */}
        <Modal isOpen={isModalOpen} onClose={closeModal}>
          {activeImage && (
            <>
              <img src={activeImage.src} alt="–ü–æ–≤–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è" />
              <p>{activeImage.caption}</p>
            </>
          )}
        </Modal>
      </motion.div>
    </section>
  );
};

export default SchoolTrialsSection;
